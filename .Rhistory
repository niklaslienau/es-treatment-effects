knitr::opts_chunk$set(echo = TRUE)
# Number of simulations
n_sims <- 5000
# Set the true values of beta0 and beta1
beta0 <- 2
beta1 <- 3
# Function to perform one simulation
f <- function(n_obs) {
# Generate random data for the independent variable (x)
x <- runif(n_obs, min = 0, max = 10)
# Generate random noise (errors)
errors <- rnorm(n_obs, mean = 0, sd = 2)
# Compute the dependent variable (y) using the true parameters and adding the errors
y <- beta0 + beta1 * x + errors
# Fit a linear regression model to the data
res_temp <- lm(y ~ x)
# Return the slope coefficient of the model
return(res_temp$coefficients[2])
}
set.seed(12345)
# Run the Monte Carlo simulation for n_obs = 10
res_10 <- replicate(5000, f(n_obs = 10))
# Plot histogram of beta1hat for n_obs = 10
hist(res_10, xlab = "Value", ylab = "Frequency", xlim = c(2, 4),
main = "Histogram of beta1hat with 10 observation and 5000 MC replications")
# Calculate mean of beta1hat for n_obs = 10
mean_beta1hat <- mean(res_10)
mean_beta1hat
# Draw vertical lines for true beta1 and mean of beta1hat for n_obs = 10
abline(v = beta1, col = "blue", lwd = 2)
abline(v = mean_beta1hat, col = "red", lwd = 2)
# Add legend for vertical lines
legend("topright", legend = c("beta1", "mean(beta1hat)"), col = c("blue", "red"), lty = 1)
set.seed(12345)
# Similar steps are repeated for n_obs = 100, n_obs = 1000, and n_obs = 10000
# Run the Monte Carlo simulation for n_obs = 100
res_100 <- replicate(5000, f(n_obs = 100))
# Plot histogram of beta1hat for n_obs = 100
hist(res_100, xlab = "Value", ylab = "Frequency", xlim = c(2, 4),
main = "Histogram of beta1hat with 100 observation and 5000 MC replications")
# Calculate mean of beta1hat for n_obs = 100
mean_beta1hat <- mean(res_100)
mean_beta1hat
# Draw vertical lines for true beta1 and mean of beta1hat for n_obs = 100
abline(v = beta1, col = "blue", lwd = 2)
abline(v = mean_beta1hat, col = "red", lwd = 2)
# Add legend for vertical lines
legend("topright", legend = c("beta1", "mean(beta1hat)"), col = c("blue", "red"), lty = 1)
set.seed(12345)
# Run the Monte Carlo simulation for n_obs = 1000
res_1000 <- replicate(5000, f(n_obs = 1000))
# Plot histogram of beta1hat for n_obs = 1000
hist(res_1000, xlab = "Value", ylab = "Frequency", xlim = c(2, 4),
main = "Histogram of beta1hat with 1000 observation and 5000 MC replications")
# Calculate mean of beta1hat for n_obs = 1000
mean_beta1hat <- mean(res_1000)
mean_beta1hat
# Draw vertical lines for true beta1 and mean of beta1hat for n_obs = 1000
abline(v = beta1, col = "blue", lwd = 2)
abline(v = mean_beta1hat, col = "red", lwd = 2)
# Add legend for vertical lines
legend("topright", legend = c("beta1", "mean(beta1hat)"), col = c("blue", "red"), lty = 1)
set.seed(12345)
# Run the Monte Carlo simulation for n_obs = 1000
res_1000 <- replicate(5000, f(n_obs = 100000))
set.seed(12345)
# Run the Monte Carlo simulation for n_obs = 1000
res_1000 <- replicate(5000, f(n_obs = 1000))
# Plot histogram of beta1hat for n_obs = 1000
hist(res_1000, xlab = "Value", ylab = "Frequency", xlim = c(2, 4),
main = "Histogram of beta1hat with 1000 observation and 5000 MC replications")
# Calculate mean of beta1hat for n_obs = 1000
mean_beta1hat <- mean(res_1000)
mean_beta1hat
# Draw vertical lines for true beta1 and mean of beta1hat for n_obs = 1000
abline(v = beta1, col = "blue", lwd = 2)
abline(v = mean_beta1hat, col = "red", lwd = 2)
# Add legend for vertical lines
legend("topright", legend = c("beta1", "mean(beta1hat)"), col = c("blue", "red"), lty = 1)
getwd()
